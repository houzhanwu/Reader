<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="NovelDao">
    <select id="getAll" resultType="entity.NovelPO">
        select * from novel;
    </select>
    <select id="findById" resultType="entity.NovelPO" parameterType="long">
        select * from novel where novel_id=#{id}
    </select>
    <select id="findByTitle" resultType="entity.NovelPO" parameterType="string">
        select * from novel where title like #{title}
    </select>
    <select id="findByAuthor" resultType="entity.NovelPO" parameterType="string">
        select * from novel where author like #{author}
    </select>
    <select id="getAllCategory" resultType="string">
        select distinct category from novel
    </select>
    <select id="findByCategory" resultType="entity.NovelPO" parameterType="string">
        select * from novel where category=#{category}
    </select>
    <select id="getAllNotDelete" resultType="entity.NovelPO">
        select * from novel where is_delete=0
    </select>
    <select id="existByTitleAndAuthor" parameterType="map" resultType="long">
        select novel_id from novel where author=#{author} and title=#{title}
    </select>
    <select id="existByNovelPO" parameterType="entity.NovelPO" resultType="long">
        select novel_id from novel where author=#{author} and title=#{title}
    </select>
    <insert id="insert" keyColumn="novel_id" keyProperty="novelId" parameterType="entity.NovelPO" useGeneratedKeys="true">
        insert into novel
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="author != null">
                author,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="isEnd != null">
                is_end,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                #{category,jdbcType=VARCHAR},
            </if>
            <if test="isEnd != null">
                #{isEnd,jdbcType=BIT},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=BIT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="title != null">
                #{title,jdbcType=LONGVARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="entity.NovelPO">
        update novel
        <set>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                category = #{category,jdbcType=VARCHAR},
            </if>
            <if test="isEnd != null">
                is_end = #{isEnd,jdbcType=BIT},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=BIT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=LONGVARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where novel_id = #{novelId,jdbcType=BIGINT}
    </update>
    <update id="deleteById" parameterType="long">
        update novel set is_delete=1 where novel_id=#{id}
    </update>

</mapper>